// <auto-generated />
using System;
using Gozba_na_klik.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Gozba_na_klik.Migrations
{
    [DbContext(typeof(GozbaNaKlikDbContext))]
    [Migration("20251016150150_AddDeliveryPersonSchedule")]
    partial class AddDeliveryPersonSchedule
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AlergenMeal", b =>
                {
                    b.Property<int>("AlergensId")
                        .HasColumnType("integer");

                    b.Property<int>("MealsId")
                        .HasColumnType("integer");

                    b.HasKey("AlergensId", "MealsId");

                    b.HasIndex("MealsId");

                    b.ToTable("MealAlergens", (string)null);

                    b.HasData(
                        new
                        {
                            AlergensId = 1,
                            MealsId = 1
                        },
                        new
                        {
                            AlergensId = 2,
                            MealsId = 1
                        },
                        new
                        {
                            AlergensId = 3,
                            MealsId = 1
                        },
                        new
                        {
                            AlergensId = 1,
                            MealsId = 2
                        },
                        new
                        {
                            AlergensId = 3,
                            MealsId = 2
                        },
                        new
                        {
                            AlergensId = 2,
                            MealsId = 3
                        },
                        new
                        {
                            AlergensId = 3,
                            MealsId = 3
                        },
                        new
                        {
                            AlergensId = 4,
                            MealsId = 4
                        },
                        new
                        {
                            AlergensId = 5,
                            MealsId = 5
                        },
                        new
                        {
                            AlergensId = 6,
                            MealsId = 5
                        },
                        new
                        {
                            AlergensId = 7,
                            MealsId = 5
                        },
                        new
                        {
                            AlergensId = 5,
                            MealsId = 7
                        },
                        new
                        {
                            AlergensId = 5,
                            MealsId = 8
                        },
                        new
                        {
                            AlergensId = 8,
                            MealsId = 8
                        },
                        new
                        {
                            AlergensId = 3,
                            MealsId = 9
                        },
                        new
                        {
                            AlergensId = 5,
                            MealsId = 9
                        },
                        new
                        {
                            AlergensId = 1,
                            MealsId = 10
                        });
                });

            modelBuilder.Entity("Gozba_na_klik.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apartment")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Entrance")
                        .HasColumnType("text");

                    b.Property<string>("Floor")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Gozba_na_klik.Models.Alergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Alergens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gluten"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Eggs"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Milk"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fish"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Soy"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Crustaceans"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sesame"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Mustard"
                        });
                });

            modelBuilder.Entity("Gozba_na_klik.Models.ClosedDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("ClosedDates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Reason = "Christmas",
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Reason = "New Year",
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2025, 7, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Reason = "Independence Day",
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("Gozba_na_klik.Models.DeliveryPersonSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("integer");

                    b.Property<int>("DeliveryPersonId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryPersonId");

                    b.ToTable("DeliveryPersonSchedules");
                });

            modelBuilder.Entity("Gozba_na_klik.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Classic Italian pasta with pancetta, egg, and pecorino cheese.",
                            ImagePath = "...",
                            Name = "Spaghetti Carbonara",
                            Price = 950m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fresh mozzarella, tomato sauce, and basil on a wood-fired crust.",
                            ImagePath = "...",
                            Name = "Margherita Pizza",
                            Price = 890m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Layered pasta with beef ragù, bechamel sauce, and parmesan.",
                            ImagePath = "...",
                            Name = "Lasagna al Forno",
                            Price = 1100m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Fresh salmon on seasoned rice, served with wasabi.",
                            ImagePath = "...",
                            Name = "Salmon Nigiri",
                            Price = 620m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Crab, avocado, and cucumber rolled in sesame rice.",
                            ImagePath = "...",
                            Name = "California Roll",
                            Price = 750m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "Thinly sliced tuna served with soy sauce and wasabi.",
                            ImagePath = "...",
                            Name = "Tuna Sashimi",
                            Price = 980m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Rich miso broth with noodles, egg, and pork slices.",
                            ImagePath = "...",
                            Name = "Ramen Bowl",
                            Price = 1100m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Slow-cooked ribs with tangy BBQ sauce.",
                            ImagePath = "...",
                            Name = "BBQ Ribs",
                            Price = 1450m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 9,
                            Description = "Juicy grilled chicken with seasonal vegetables.",
                            ImagePath = "...",
                            Name = "Grilled Chicken Breast",
                            Price = 980m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 10,
                            Description = "Classic beef burger with cheddar, lettuce, and tomato.",
                            ImagePath = "...",
                            Name = "Beef Burger",
                            Price = 890m,
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("Gozba_na_klik.Models.MealAddon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("MealId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.ToTable("MealAddons");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            IsActive = false,
                            MealId = 1,
                            Name = "Garlic Bread",
                            Price = 150m,
                            Type = "independent"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            MealId = 1,
                            Name = "Extra Sauce",
                            Price = 100m,
                            Type = "chosen"
                        },
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            MealId = 2,
                            Name = "Extra Cheese",
                            Price = 120m,
                            Type = "chosen"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = false,
                            MealId = 2,
                            Name = "Chili Flakes",
                            Price = 50m,
                            Type = "independent"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            MealId = 3,
                            Name = "Parmesan",
                            Price = 80m,
                            Type = "chosen"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = false,
                            MealId = 4,
                            Name = "Soy Sauce",
                            Price = 60m,
                            Type = "independent"
                        },
                        new
                        {
                            Id = 17,
                            IsActive = true,
                            MealId = 4,
                            Name = "Teriyaki Sauce",
                            Price = 90m,
                            Type = "chosen"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = false,
                            MealId = 5,
                            Name = "Extra Wasabi",
                            Price = 70m,
                            Type = "chosen"
                        },
                        new
                        {
                            Id = 16,
                            IsActive = true,
                            MealId = 5,
                            Name = "Spicy Mayo",
                            Price = 80m,
                            Type = "chosen"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = false,
                            MealId = 6,
                            Name = "Ginger",
                            Price = 50m,
                            Type = "independent"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = false,
                            MealId = 7,
                            Name = "Boiled Egg",
                            Price = 120m,
                            Type = "chosen"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            MealId = 7,
                            Name = "Extra Pork",
                            Price = 200m,
                            Type = "chosen"
                        },
                        new
                        {
                            Id = 18,
                            IsActive = false,
                            MealId = 7,
                            Name = "Extra Noodles",
                            Price = 140m,
                            Type = "chosen"
                        },
                        new
                        {
                            Id = 13,
                            IsActive = true,
                            MealId = 8,
                            Name = "BBQ Sauce",
                            Price = 90m,
                            Type = "chosen"
                        },
                        new
                        {
                            Id = 14,
                            IsActive = false,
                            MealId = 8,
                            Name = "Coleslaw",
                            Price = 130m,
                            Type = "independent"
                        },
                        new
                        {
                            Id = 15,
                            IsActive = false,
                            MealId = 9,
                            Name = "Grilled Vegetables",
                            Price = 150m,
                            Type = "independent"
                        },
                        new
                        {
                            Id = 20,
                            IsActive = false,
                            MealId = 9,
                            Name = "Caesar Salad",
                            Price = 190m,
                            Type = "independent"
                        },
                        new
                        {
                            Id = 11,
                            IsActive = false,
                            MealId = 10,
                            Name = "Fries",
                            Price = 180m,
                            Type = "independent"
                        },
                        new
                        {
                            Id = 12,
                            IsActive = false,
                            MealId = 10,
                            Name = "Onion Rings",
                            Price = 160m,
                            Type = "independent"
                        },
                        new
                        {
                            Id = 19,
                            IsActive = true,
                            MealId = 10,
                            Name = "Extra Beef",
                            Price = 220m,
                            Type = "chosen"
                        });
                });

            modelBuilder.Entity("Gozba_na_klik.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Some address 1",
                            CreatedAt = new DateTime(2025, 9, 28, 8, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Authentic Italian dishes made with fresh ingredients.",
                            Name = "Bella Italia",
                            OwnerId = 7,
                            Phone = "123456",
                            PhotoUrl = "..."
                        },
                        new
                        {
                            Id = 2,
                            Address = "Some address 2",
                            CreatedAt = new DateTime(2025, 9, 28, 8, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Authentic Japanese dishes made with fresh ingredients.",
                            Name = "Sushi Master",
                            OwnerId = 8,
                            Phone = "234567",
                            PhotoUrl = "..."
                        },
                        new
                        {
                            Id = 3,
                            Address = "Some address 3",
                            CreatedAt = new DateTime(2025, 9, 28, 9, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Authentic Ausie dishes made with fresh ingredients.",
                            Name = "Grill House",
                            OwnerId = 9,
                            Phone = "345678",
                            PhotoUrl = "..."
                        });
                });

            modelBuilder.Entity("Gozba_na_klik.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserImage")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "josipvaltner@gmail.com",
                            IsActive = true,
                            Password = "pass_jv",
                            Role = "Admin",
                            Username = "Josip_admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "lukakovacevic@gmail.com",
                            IsActive = true,
                            Password = "pass_lk",
                            Role = "Admin",
                            Username = "Luka_admin"
                        },
                        new
                        {
                            Id = 3,
                            Email = "borislaketic@gmail.com",
                            IsActive = true,
                            Password = "pass_bl",
                            Role = "Admin",
                            Username = "Boris_admin"
                        },
                        new
                        {
                            Id = 4,
                            Email = "kopasztamas@gmail.com",
                            IsActive = true,
                            Password = "pass_kt",
                            Role = "Admin",
                            Username = "Tamas_admin"
                        },
                        new
                        {
                            Id = 5,
                            Email = "urosmilinovic@gmail.com",
                            IsActive = true,
                            Password = "pass_um",
                            Role = "Admin",
                            Username = "Uros_admin"
                        },
                        new
                        {
                            Id = 7,
                            Email = "milan.owner@example.com",
                            IsActive = true,
                            Password = "pass_mo",
                            Role = "RestaurantOwner",
                            Username = "Milan_owner"
                        },
                        new
                        {
                            Id = 8,
                            Email = "ana.owner@example.com",
                            IsActive = true,
                            Password = "pass_ao",
                            Role = "RestaurantOwner",
                            Username = "Ana_owner"
                        },
                        new
                        {
                            Id = 9,
                            Email = "ivan.owner@example.com",
                            IsActive = true,
                            Password = "pass_io",
                            Role = "RestaurantOwner",
                            Username = "Ivan_owner"
                        },
                        new
                        {
                            Id = 10,
                            Email = "petar.employee@example.com",
                            IsActive = true,
                            Password = "pass_pe",
                            RestaurantId = 1,
                            Role = "RestaurantEmployee",
                            Username = "Petar_employee"
                        },
                        new
                        {
                            Id = 11,
                            Email = "marko.delivery@example.com",
                            IsActive = true,
                            Password = "pass_md",
                            RestaurantId = 1,
                            Role = "DeliveryPerson",
                            Username = "Marko_delivery"
                        },
                        new
                        {
                            Id = 12,
                            Email = "ana.employee@example.com",
                            IsActive = true,
                            Password = "pass_ae",
                            RestaurantId = 2,
                            Role = "RestaurantEmployee",
                            Username = "Ana_employee"
                        },
                        new
                        {
                            Id = 13,
                            Email = "jovan.delivery@example.com",
                            IsActive = true,
                            Password = "pass_jd",
                            RestaurantId = 2,
                            Role = "DeliveryPerson",
                            Username = "Jovan_delivery"
                        },
                        new
                        {
                            Id = 14,
                            Email = "nikola.employee@example.com",
                            IsActive = true,
                            Password = "pass_ne",
                            RestaurantId = 3,
                            Role = "RestaurantEmployee",
                            Username = "Nikola_employee"
                        },
                        new
                        {
                            Id = 15,
                            Email = "sara.employee@example.com",
                            IsActive = false,
                            Password = "pass_se",
                            RestaurantId = 1,
                            Role = "RestaurantEmployee",
                            Username = "Sara_employee"
                        });
                });

            modelBuilder.Entity("Gozba_na_klik.Models.WorkSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("CloseTime")
                        .HasColumnType("interval");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("OpenTime")
                        .HasColumnType("interval");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("WorkSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CloseTime = new TimeSpan(0, 21, 0, 0, 0),
                            DayOfWeek = 1,
                            OpenTime = new TimeSpan(0, 9, 0, 0, 0),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            CloseTime = new TimeSpan(0, 21, 0, 0, 0),
                            DayOfWeek = 2,
                            OpenTime = new TimeSpan(0, 9, 0, 0, 0),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            CloseTime = new TimeSpan(0, 22, 0, 0, 0),
                            DayOfWeek = 1,
                            OpenTime = new TimeSpan(0, 11, 0, 0, 0),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 4,
                            CloseTime = new TimeSpan(0, 22, 0, 0, 0),
                            DayOfWeek = 2,
                            OpenTime = new TimeSpan(0, 11, 0, 0, 0),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 5,
                            CloseTime = new TimeSpan(0, 20, 0, 0, 0),
                            DayOfWeek = 1,
                            OpenTime = new TimeSpan(0, 10, 0, 0, 0),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 6,
                            CloseTime = new TimeSpan(0, 20, 0, 0, 0),
                            DayOfWeek = 2,
                            OpenTime = new TimeSpan(0, 10, 0, 0, 0),
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("AlergenMeal", b =>
                {
                    b.HasOne("Gozba_na_klik.Models.Alergen", null)
                        .WithMany()
                        .HasForeignKey("AlergensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gozba_na_klik.Models.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gozba_na_klik.Models.ClosedDate", b =>
                {
                    b.HasOne("Gozba_na_klik.Models.Restaurant", "Restaurant")
                        .WithMany("ClosedDates")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Gozba_na_klik.Models.DeliveryPersonSchedule", b =>
                {
                    b.HasOne("Gozba_na_klik.Models.User", "DeliveryPerson")
                        .WithMany()
                        .HasForeignKey("DeliveryPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryPerson");
                });

            modelBuilder.Entity("Gozba_na_klik.Models.Meal", b =>
                {
                    b.HasOne("Gozba_na_klik.Models.Restaurant", "Restaurant")
                        .WithMany("Menu")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Gozba_na_klik.Models.MealAddon", b =>
                {
                    b.HasOne("Gozba_na_klik.Models.Meal", "Meal")
                        .WithMany("Addons")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("Gozba_na_klik.Models.Restaurant", b =>
                {
                    b.HasOne("Gozba_na_klik.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Gozba_na_klik.Models.User", b =>
                {
                    b.HasOne("Gozba_na_klik.Models.Restaurant", "Restaurant")
                        .WithMany("Employees")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Gozba_na_klik.Models.WorkSchedule", b =>
                {
                    b.HasOne("Gozba_na_klik.Models.Restaurant", "Restaurant")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Gozba_na_klik.Models.Meal", b =>
                {
                    b.Navigation("Addons");
                });

            modelBuilder.Entity("Gozba_na_klik.Models.Restaurant", b =>
                {
                    b.Navigation("ClosedDates");

                    b.Navigation("Employees");

                    b.Navigation("Menu");

                    b.Navigation("WorkSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
